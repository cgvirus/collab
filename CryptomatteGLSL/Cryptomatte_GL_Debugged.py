# -*- coding: utf-8 -*-
# DO NOT EDIT THIS FILE
# This file was automatically generated by Natron PyPlug exporter version 10.

# Hand-written code should be added in a separate file named Cryptomatte_GL_DebuggedExt.py
# See http://natron.readthedocs.org/en/master/devel/groups.html#adding-hand-written-code-callbacks-etc
# Note that Viewers are never exported

import NatronEngine
import sys

# Try to import the extensions file where callbacks and hand-written code should be located.
try:
    from Cryptomatte_GL_DebuggedExt import *
except ImportError:
    pass

def getPluginID():
    return "natron.community.plugins.Cryptomatte_GL_Debugged"

def getLabel():
    return "Cryptomatte_GL_Debugged"

def getVersion():
    return 1

def getIconPath():
    return "Cryptomatte_GL.png"

def getGrouping():
    return "Community/GLSL/Keying"

def getPluginDescription():
    return "Extract up to four mattes from the ID/coverage pairs generated by Arnold/Clarisse/Mantra\'s Cryptomatte shaders.\n( https://www.youtube.com/watch?v=p5D1FRRlplU )"

def createInstance(app,group):
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = group
    lastNode.setColor(0.4314, 0.4, 0.8588)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createStringParam("sep01", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep01 = param
    del param

    param = lastNode.createStringParam("sep02", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep02 = param
    del param

    param = lastNode.createSeparatorParam("SETUP", "Setup")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.SETUP = param
    del param

    param = lastNode.createStringParam("sep03", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep03 = param
    del param

    param = lastNode.createStringParam("sep04", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep04 = param
    del param

    param = lastNode.createBooleanParam("Shadertoy1paramValueBool10", "Output 3 mattes in RGB : ")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("output 3 mattes in RGB")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueBool10 = param
    del param

    param = lastNode.createStringParam("sep05", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep05 = param
    del param

    param = lastNode.createStringParam("sep06", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep06 = param
    del param

    param = lastNode.createSeparatorParam("COMBINE_PICKERS", "Combine 3 mattes pickers")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.COMBINE_PICKERS = param
    del param

    param = lastNode.createStringParam("sep07", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep07 = param
    del param

    param = lastNode.createStringParam("sep08", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep08 = param
    del param

    param = lastNode.createBooleanParam("Shadertoy1paramValueBool5", "Enable :  ")
    param.setDefaultValue(True)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueBool5 = param
    del param

    param = lastNode.createColorParam("Shadertoy1paramValueVec30", "ID for R : ", False)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueVec30 = param
    del param

    param = lastNode.createSeparatorParam("LINE01", "")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.LINE01 = param
    del param

    param = lastNode.createBooleanParam("Shadertoy1paramValueBool6", "Enable :  ")
    param.setDefaultValue(True)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueBool6 = param
    del param

    param = lastNode.createColorParam("Shadertoy1paramValueVec31", "ID for G : ", False)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueVec31 = param
    del param

    param = lastNode.createSeparatorParam("LINE02", "")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.LINE02 = param
    del param

    param = lastNode.createBooleanParam("Shadertoy1paramValueBool7", "Enable :  ")
    param.setDefaultValue(True)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueBool7 = param
    del param

    param = lastNode.createColorParam("Shadertoy1paramValueVec32", "ID for B : ", False)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueVec32 = param
    del param

    param = lastNode.createStringParam("sep09", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep09 = param
    del param

    param = lastNode.createStringParam("sep10", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep10 = param
    del param

    param = lastNode.createSeparatorParam("SINGLE_PICKER", "Single matte picker")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.SINGLE_PICKER = param
    del param

    param = lastNode.createStringParam("sep11", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep11 = param
    del param

    param = lastNode.createStringParam("sep12", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep12 = param
    del param

    param = lastNode.createBooleanParam("Shadertoy1paramValueBool9", "Enable  : ")
    param.setDefaultValue(True)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueBool9 = param
    del param

    param = lastNode.createColorParam("Shadertoy1paramValueVec34", "ID for result : ", False)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueVec34 = param
    del param

    param = lastNode.createSeparatorParam("LINE03", "")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.LINE03 = param
    del param

    param = lastNode.createBooleanParam("Shadertoy1paramValueBool8", "Enable :  ")
    param.setDefaultValue(True)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueBool8 = param
    del param

    param = lastNode.createColorParam("Shadertoy1paramValueVec33", "ID for Matte : ", False)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueVec33 = param
    del param

    param = lastNode.createStringParam("sep13", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep13 = param
    del param

    param = lastNode.createStringParam("sep14", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep14 = param
    del param

    param = lastNode.createSeparatorParam("OUTPUT", "Output")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.OUTPUT = param
    del param

    param = lastNode.createStringParam("sep15", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep15 = param
    del param

    param = lastNode.createStringParam("sep16", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep16 = param
    del param

    param = lastNode.createBooleanParam("Shadertoy1paramValueBool11", "Combine all mattes :")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueBool11 = param
    del param

    param = lastNode.createStringParam("sep17", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep17 = param
    del param

    param = lastNode.createStringParam("sep18", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep18 = param
    del param

    lastNode.Credits = lastNode.createPageParam("Credits", "Credits")
    param = lastNode.createStringParam("sep101", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep101 = param
    del param

    param = lastNode.createStringParam("sep102", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep102 = param
    del param

    param = lastNode.createSeparatorParam("NAME", "Cryptomatte_GL v1.0")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.NAME = param
    del param

    param = lastNode.createStringParam("sep103", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep103 = param
    del param

    param = lastNode.createStringParam("sep104", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep104 = param
    del param

    param = lastNode.createSeparatorParam("LINE101", "")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.LINE101 = param
    del param

    param = lastNode.createStringParam("sep105", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep105 = param
    del param

    param = lastNode.createStringParam("sep106", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep106 = param
    del param

    param = lastNode.createSeparatorParam("FR", "ShaderToy 0.8.8")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.FR = param
    del param

    param = lastNode.createStringParam("sep107", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep107 = param
    del param

    param = lastNode.createStringParam("sep108", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep108 = param
    del param

    param = lastNode.createSeparatorParam("CONVERSION", " (Fabrice Fernandez - 2018)")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.CONVERSION = param
    del param

    param = lastNode.createStringParam("sep109", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep109 = param
    del param

    param = lastNode.createStringParam("sep110", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep110 = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Credits', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, group)
    lastNode.setLabel("Output2")
    lastNode.setPosition(4132, 4215)
    lastNode.setSize(80, 32)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Start of node "Shadertoy1"
    lastNode = app.createNode("net.sf.openfx.Shadertoy", 1, group)
    lastNode.setScriptName("Shadertoy1")
    lastNode.setLabel("Shadertoy1")
    lastNode.setPosition(4132, 3844)
    lastNode.setSize(80, 32)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupShadertoy1 = lastNode

    param = lastNode.getParam("paramValueVec30")
    if param is not None:
        param.setValue(0, 0)
        param.setValue(0, 1)
        param.setValue(0, 2)
        del param

    param = lastNode.getParam("paramValueVec31")
    if param is not None:
        param.setValue(0, 0)
        param.setValue(0, 1)
        param.setValue(0, 2)
        del param

    param = lastNode.getParam("paramValueVec32")
    if param is not None:
        param.setValue(0, 0)
        param.setValue(0, 1)
        param.setValue(0, 2)
        del param

    param = lastNode.getParam("paramValueVec33")
    if param is not None:
        param.setValue(0, 0)
        param.setValue(0, 1)
        param.setValue(0, 2)
        del param

    param = lastNode.getParam("paramValueVec34")
    if param is not None:
        param.setValue(0, 0)
        param.setValue(0, 1)
        param.setValue(0, 2)
        del param

    param = lastNode.getParam("paramValueBool5")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("paramValueBool6")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("paramValueBool7")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("paramValueBool8")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("paramValueBool9")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("paramValueBool10")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramValueBool11")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("imageShaderFileName")
    if param is not None:
        param.setValue("/home/production/Code_PRojects/cryptomatte/Flame/crypto.glsl")
        del param

    param = lastNode.getParam("imageShaderSource")
    if param is not None:
        param.setValue("//\n//\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//                        MM.                          .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                     MM.  .MMMM        MMMMMMM    MMM.  .MM\n//                    MM.  .MMM           MMMMMM     MMM.  .MM\n//                   MM.  .MmM              MMMM      MMM.  .MM\n//                  MM.  .MMM                 MM       MMM.  .MM\n//                 MM.  .MMM                   M        MMM.  .MM\n//                MM.  .MMM                              MMM.  .MM\n//                 MM.  .MMM                            MMM.  .MM\n//                  MM.  .MMM       M                  MMM.  .MM\n//                   MM.  .MMM      MM                MMM.  .MM\n//                    MM.  .MMM     MMM              MMM.  .MM\n//                     MM.  .MMM    MMMM            MMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                        MM.                          .MM\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//\n//\n//\n//\n// Adaptation pour Natron par F. Fernandez\n// Code original : Cryptomatte Matchbox pour Autodesk Flame\n\n// Adapted to Natron by F.Fernandez\n// Original code : Cryptomatte Matchbox for Autodesk Flame\n\n\n/* Cryptomatte\n     Given a set of ID/coverage pairs, extract up to four mattes\n     See https://github.com/Psyop/Cryptomatte\n     This shader by lewis@lewissaunders.com\n     TODO: allow picking using the standard colour pots if the 65504.0\n           limit is ever removed\n*/\n\n\n\n// iChannel0: Crypto_ID 1, filter=linear, wrap=clamp\n// iChannel1: Crypto_ID 2, filter=linear, wrap=clamp\n// iChannel2: Crypto_ID 3, filter=linear, wrap=clamp\n// BBox: iChannel0\n\n// Our colour picker widgets and whether they\'re enabled\nuniform vec3 pickr = vec3( 0.0 , 0.0 , 0.0 );        // ID for R : \nuniform vec3 pickg = vec3( 0.0 , 0.0 , 0.0 );        // ID for G : \nuniform vec3 pickb = vec3( 0.0 , 0.0 , 0.0 );        // ID for B : \nuniform vec3 pickm = vec3( 0.0 , 0.0 , 0.0 );        // ID for Matte : \n\nuniform vec3 pickresult = vec3( 0.0 , 0.0 , 0.0);    // ID for result : \n\nuniform bool enabler = true; // Enable R : \nuniform bool enableg = true; // Enable G : \nuniform bool enableb = true; // Enable B : \nuniform bool enablem = true; // Enable Matte : \n\nuniform bool enableresult = true; // Enable Result : \n\n// Whether we should output a single matte on RGB, or three separate mattes\nuniform bool separatergb = false; // Output 3 mattes in RGB : \n\n// Whether we should output the sum of all picked mattes\nuniform bool combine = false; // Combine all mattes : \n\n// Dummy button with tooltip to remind about using the floating colour sampler\n//causing buffer overload in Natron\n// uniform bool reminder = false;\n\n// Widget which is temporarily draggable over the image to inspect available mattes\nuniform vec2 inspect = vec2( 1.1 , 0.3 ); // Quick inspector : \n\n\n\n\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  // Convert fragment coords in pixels to texel coords in [0..1]\n  vec2 res = vec2(iResolution.x, iResolution.y);\n  vec2 xy = fragCoord.xy / res;\n\n\n\n\n  // In these vectors the first element is the ID, the second the coverage\n  vec2 rank0 = texture2D(iChannel0, xy).rg;\n  vec2 rank1 = vec2(texture2D(iChannel0, xy).b, texture2D(iChannel0, xy).a);\n  vec2 rank2 = texture2D(iChannel1, xy).rg;\n  vec2 rank3 = vec2(texture2D(iChannel1, xy).b, texture2D(iChannel1, xy).a);\n  vec2 rank4 = texture2D(iChannel2, xy).rg;\n  vec2 rank5 = vec2(texture2D(iChannel2, xy).b, texture2D(iChannel2, xy).a);\n\n\n\n\n  // Accumulate opacity from the ranks for each picked ID\n  vec4 result = vec4(0.0);\n  if(separatergb == true) {\n    if(enabler) {\n      if(rank0.x == pickr.r) result.r += rank0.y;\n      if(rank1.x == pickr.r) result.r += rank1.y;\n      if(rank2.x == pickr.r) result.r += rank2.y;\n      if(rank3.x == pickr.r) result.r += rank3.y;\n      if(rank4.x == pickr.r) result.r += rank4.y;\n      if(rank5.x == pickr.r) result.r += rank5.y;\n    }\n    if(enableg == true) {\n      if(rank0.x == pickg.r) result.g += rank0.y;\n      if(rank1.x == pickg.r) result.g += rank1.y;\n      if(rank2.x == pickg.r) result.g += rank2.y;\n      if(rank3.x == pickg.r) result.g += rank3.y;\n      if(rank4.x == pickg.r) result.g += rank4.y;\n      if(rank5.x == pickg.r) result.g += rank5.y;\n    }\n    if(enableb) {\n      if(rank0.x == pickb.r) result.b += rank0.y;\n      if(rank1.x == pickb.r) result.b += rank1.y;\n      if(rank2.x == pickb.r) result.b += rank2.y;\n      if(rank3.x == pickb.r) result.b += rank3.y;\n      if(rank4.x == pickb.r) result.b += rank4.y;\n      if(rank5.x == pickb.r) result.b += rank5.y;\n    }\n  } else {\n    if(enableresult == true) {\n      if(rank0.x == pickresult.r) result.rgb += vec3(rank0.y);\n      if(rank1.x == pickresult.r) result.rgb += vec3(rank1.y);\n      if(rank2.x == pickresult.r) result.rgb += vec3(rank2.y);\n      if(rank3.x == pickresult.r) result.rgb += vec3(rank3.y);\n      if(rank4.x == pickresult.r) result.rgb += vec3(rank4.y);\n      if(rank5.x == pickresult.r) result.rgb += vec3(rank5.y);\n    }\n  }\n\n  if(enablem == true) {\n    if(rank0.x == pickm.r) result.a += rank0.y;\n    if(rank1.x == pickm.r) result.a += rank1.y;\n    if(rank2.x == pickm.r) result.a += rank2.y;\n    if(rank3.x == pickm.r) result.a += rank3.y;\n    if(rank4.x == pickm.r) result.a += rank4.y;\n    if(rank5.x == pickm.r) result.a += rank5.y;\n  }\n\n  if(combine == true) {\n    // Combine the picked mattes.  Since our mattes are disjoint, we just add them,\n    // although if for some reason the user has picked the same ID multiple times, this will\n    // result in values over 1.0\n    if(separatergb == true) {\n      result = vec4(result.r + result.g + result.b + result.a);\n    } else {\n      result = vec4(result.r + result.a);\n    }\n  }\n\n  // If the temporary inspector widget is inside the image, output the first three mattes under\n  // it into RGB\n  if(0.0 < inspect.x && inspect.x < 1.0 && 0.0 < inspect.y && inspect.y < 1.0) {\n    vec2 inspectrank0 = texture2D(iChannel0, inspect).rg;\n    vec2 inspectrank1 = vec2(texture2D(iChannel0, inspect).b, texture2D(iChannel0, inspect).a);\n    vec2 inspectrank2 = texture2D(iChannel1, inspect).rg;\n    vec2 inspectrank3 = vec2(texture2D(iChannel1, inspect).b, texture2D(iChannel1, inspect).a);\n    vec2 inspectrank4 = texture2D(iChannel2, inspect).rg;\n    vec2 inspectrank5 = vec2(texture2D(iChannel2, inspect).b, texture2D(iChannel2, inspect).a);\n    result = vec4(0.0);\n    if(rank0.x == inspectrank0.r) result.ra += rank0.yy;\n    if(rank1.x == inspectrank0.r) result.ra += rank1.yy;\n    if(rank2.x == inspectrank0.r) result.ra += rank2.yy;\n    if(rank3.x == inspectrank0.r) result.ra += rank3.yy;\n    if(rank4.x == inspectrank0.r) result.ra += rank4.yy;\n    if(rank5.x == inspectrank0.r) result.ra += rank5.yy;\n\n    if(rank0.x == inspectrank1.r) result.g += rank0.y;\n    if(rank1.x == inspectrank1.r) result.g += rank1.y;\n    if(rank2.x == inspectrank1.r) result.g += rank2.y;\n    if(rank3.x == inspectrank1.r) result.g += rank3.y;\n    if(rank4.x == inspectrank1.r) result.g += rank4.y;\n    if(rank5.x == inspectrank1.r) result.g += rank5.y;\n\n    if(rank0.x == inspectrank2.r) result.b += rank0.y;\n    if(rank1.x == inspectrank2.r) result.b += rank1.y;\n    if(rank2.x == inspectrank2.r) result.b += rank2.y;\n    if(rank3.x == inspectrank2.r) result.b += rank3.y;\n    if(rank4.x == inspectrank2.r) result.b += rank4.y;\n    if(rank5.x == inspectrank2.r) result.b += rank5.y;\n  }\n\n  fragColor = result;\n}\n")
        del param

    param = lastNode.getParam("mipmap0")
    if param is not None:
        param.set("linear")
        del param

    param = lastNode.getParam("wrap0")
    if param is not None:
        param.set("clamp")
        del param

    param = lastNode.getParam("inputLabel0")
    if param is not None:
        param.setValue("Crypto_ID 1")
        del param

    param = lastNode.getParam("mipmap1")
    if param is not None:
        param.set("linear")
        del param

    param = lastNode.getParam("wrap1")
    if param is not None:
        param.set("clamp")
        del param

    param = lastNode.getParam("inputLabel1")
    if param is not None:
        param.setValue("Crypto_ID 2")
        del param

    param = lastNode.getParam("mipmap2")
    if param is not None:
        param.set("linear")
        del param

    param = lastNode.getParam("wrap2")
    if param is not None:
        param.set("clamp")
        del param

    param = lastNode.getParam("inputLabel2")
    if param is not None:
        param.setValue("Crypto_ID 3")
        del param

    param = lastNode.getParam("inputEnable3")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("iChannel0")
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("mouseParams")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramCount")
    if param is not None:
        param.setValue(13, 0)
        del param

    param = lastNode.getParam("paramType0")
    if param is not None:
        param.set("vec3")
        del param

    param = lastNode.getParam("paramName0")
    if param is not None:
        param.setValue("pickr")
        del param

    param = lastNode.getParam("paramLabel0")
    if param is not None:
        param.setValue("ID for R :")
        del param

    param = lastNode.getParam("paramType1")
    if param is not None:
        param.set("vec3")
        del param

    param = lastNode.getParam("paramName1")
    if param is not None:
        param.setValue("pickg")
        del param

    param = lastNode.getParam("paramLabel1")
    if param is not None:
        param.setValue("ID for G :")
        del param

    param = lastNode.getParam("paramType2")
    if param is not None:
        param.set("vec3")
        del param

    param = lastNode.getParam("paramName2")
    if param is not None:
        param.setValue("pickb")
        del param

    param = lastNode.getParam("paramLabel2")
    if param is not None:
        param.setValue("ID for B :")
        del param

    param = lastNode.getParam("paramType3")
    if param is not None:
        param.set("vec3")
        del param

    param = lastNode.getParam("paramName3")
    if param is not None:
        param.setValue("pickm")
        del param

    param = lastNode.getParam("paramLabel3")
    if param is not None:
        param.setValue("ID for Matte :")
        del param

    param = lastNode.getParam("paramType4")
    if param is not None:
        param.set("vec3")
        del param

    param = lastNode.getParam("paramName4")
    if param is not None:
        param.setValue("pickresult")
        del param

    param = lastNode.getParam("paramLabel4")
    if param is not None:
        param.setValue("ID for result :")
        del param

    param = lastNode.getParam("paramType5")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName5")
    if param is not None:
        param.setValue("enabler")
        del param

    param = lastNode.getParam("paramLabel5")
    if param is not None:
        param.setValue("Enable R :")
        del param

    param = lastNode.getParam("paramDefaultBool5")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("paramType6")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName6")
    if param is not None:
        param.setValue("enableg")
        del param

    param = lastNode.getParam("paramLabel6")
    if param is not None:
        param.setValue("Enable G :")
        del param

    param = lastNode.getParam("paramDefaultBool6")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("paramType7")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName7")
    if param is not None:
        param.setValue("enableb")
        del param

    param = lastNode.getParam("paramLabel7")
    if param is not None:
        param.setValue("Enable B :")
        del param

    param = lastNode.getParam("paramDefaultBool7")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("paramType8")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName8")
    if param is not None:
        param.setValue("enablem")
        del param

    param = lastNode.getParam("paramLabel8")
    if param is not None:
        param.setValue("Enable Matte :")
        del param

    param = lastNode.getParam("paramDefaultBool8")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("paramType9")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName9")
    if param is not None:
        param.setValue("enableresult")
        del param

    param = lastNode.getParam("paramLabel9")
    if param is not None:
        param.setValue("Enable Result :")
        del param

    param = lastNode.getParam("paramDefaultBool9")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("paramType10")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName10")
    if param is not None:
        param.setValue("separatergb")
        del param

    param = lastNode.getParam("paramLabel10")
    if param is not None:
        param.setValue("Output 3 mattes in RGB :")
        del param

    param = lastNode.getParam("paramType11")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName11")
    if param is not None:
        param.setValue("combine")
        del param

    param = lastNode.getParam("paramLabel11")
    if param is not None:
        param.setValue("Combine all mattes :")
        del param

    param = lastNode.getParam("paramType12")
    if param is not None:
        param.set("vec2")
        del param

    param = lastNode.getParam("paramName12")
    if param is not None:
        param.setValue("inspect")
        del param

    param = lastNode.getParam("paramLabel12")
    if param is not None:
        param.setValue("Quick inspector :")
        del param

    param = lastNode.getParam("paramDefaultVec212")
    if param is not None:
        param.setValue(1.1, 0)
        param.setValue(0.3, 1)
        del param

    del lastNode
    # End of node "Shadertoy1"

    # Start of node "Crypto_ID_1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("Crypto_ID_1")
    lastNode.setLabel("Crypto_ID 1")
    lastNode.setPosition(4266, 3631)
    lastNode.setSize(80, 32)
    lastNode.setColor(0.702, 0.702, 0.702)
    groupCrypto_ID_1 = lastNode

    del lastNode
    # End of node "Crypto_ID_1"

    # Start of node "Crypto_ID_2"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("Crypto_ID_2")
    lastNode.setLabel("Crypto_ID 2")
    lastNode.setPosition(4132, 3630)
    lastNode.setSize(80, 32)
    lastNode.setColor(0.702, 0.702, 0.702)
    groupCrypto_ID_2 = lastNode

    del lastNode
    # End of node "Crypto_ID_2"

    # Start of node "Crypto_ID_3"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("Crypto_ID_3")
    lastNode.setLabel("Crypto_ID 3")
    lastNode.setPosition(3995, 3632)
    lastNode.setSize(80, 32)
    lastNode.setColor(0.702, 0.702, 0.702)
    groupCrypto_ID_3 = lastNode

    del lastNode
    # End of node "Crypto_ID_3"

    # Start of node "ClampAlpha"
    lastNode = app.createNode("net.sf.openfx.Clamp", 2, group)
    lastNode.setScriptName("ClampAlpha")
    lastNode.setLabel("ClampAlpha")
    lastNode.setPosition(4120, 4045)
    lastNode.setSize(104, 32)
    lastNode.setColor(0.48, 0.66, 1)
    groupClampAlpha = lastNode

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "ClampAlpha"

    # Now that all nodes are created we can connect them together, restore expressions
    groupOutput1.connectInput(0, groupClampAlpha)
    groupShadertoy1.connectInput(0, groupCrypto_ID_1)
    groupShadertoy1.connectInput(1, groupCrypto_ID_2)
    groupShadertoy1.connectInput(2, groupCrypto_ID_3)
    groupClampAlpha.connectInput(0, groupShadertoy1)

    param = groupShadertoy1.getParam("paramValueVec30")
    group.getParam("Shadertoy1paramValueVec30").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueVec31")
    group.getParam("Shadertoy1paramValueVec31").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueVec32")
    group.getParam("Shadertoy1paramValueVec32").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueVec33")
    group.getParam("Shadertoy1paramValueVec33").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueVec34")
    group.getParam("Shadertoy1paramValueVec34").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueBool5")
    group.getParam("Shadertoy1paramValueBool5").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueBool6")
    group.getParam("Shadertoy1paramValueBool6").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueBool7")
    group.getParam("Shadertoy1paramValueBool7").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueBool8")
    group.getParam("Shadertoy1paramValueBool8").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueBool9")
    group.getParam("Shadertoy1paramValueBool9").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueBool10")
    group.getParam("Shadertoy1paramValueBool10").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueBool11")
    group.getParam("Shadertoy1paramValueBool11").setAsAlias(param)
    del param

    try:
        extModule = sys.modules["Cryptomatte_GL_DebuggedExt"]
    except KeyError:
        extModule = None
    if extModule is not None and hasattr(extModule ,"createInstanceExt") and hasattr(extModule.createInstanceExt,"__call__"):
        extModule.createInstanceExt(app,group)
